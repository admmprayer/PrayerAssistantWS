plugins {
	id 'org.springframework.boot' version '2.5.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'jacoco'
}

group = 'com.admmprayergroup'
version = '0.0.1'
sourceCompatibility = '11'

springBoot {
	buildInfo()
}

ext {
	snippetsDir = file("build/generated-snippets")
}

repositories {
	mavenCentral()
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

sonarqube {
	properties {
		property "sonar.login", "admin"
		property "sonar.password", "admin1234"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.3.1'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:2.8.0'
	implementation 'org.projectlombok:lombok:1.18.24'
	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// ==================
// 		  JUnit
// ==================

test {
	group = 'test'
	description = 'Runs all unit tests for this project'

	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}

	useJUnitPlatform {
		excludeTags 'integration'
	}

	testLogging {
		events "passed", "skipped", "failed"
	}

	reports {
		html.enabled = true
	}

	outputs.dir snippetsDir

	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\n===================================================="
			println "Test Result: ${result.resultType}"
			println "Test summary: ${result.testCount} total, " +
					"${result.successfulTestCount} succeeded, " +
					"${result.failedTestCount} failed, " +
					"${result.skippedTestCount} skipped"
			println "===================================================="
		}
	}
}

task integrationTest(type: Test) {
	group = 'test'
	description = 'Runs all integration tests for this project'
	reports.junitXml.destination = file("$buildDir/test-results/integrationTest/")

	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}
	systemProperty 'buildDirectory', project.buildDir.absolutePath

	useJUnitPlatform {
		includeTags 'integration'
	}

	testLogging {
		events "passed", "skipped", "failed"
	}

	reports {
		html.enabled = true
	}

	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\n===================================================="
			println "Test Result: ${result.resultType}"
			println "Test summary: ${result.testCount} total, " +
					"${result.successfulTestCount} succeeded, " +
					"${result.failedTestCount} failed, " +
					"${result.skippedTestCount} skipped"
			println "===================================================="
		}
	}
}

build.dependsOn jacocoTestReport
tasks.named("build") {
	finalizedBy("integrationTest")
//	finalizedBy("sonarqube")
}
